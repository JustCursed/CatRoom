--- before/net/minecraft/server/network/NetHandlerLoginServer.java
+++ after/net/minecraft/server/network/NetHandlerLoginServer.java
@@ -16,6 +16,8 @@
 import java.util.concurrent.atomic.AtomicInteger;
 import javax.annotation.Nullable;
 import javax.crypto.SecretKey;
+
+import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.network.NetworkManager;
 import net.minecraft.network.login.INetHandlerLoginServer;
@@ -33,6 +35,9 @@
 import org.apache.commons.lang3.Validate;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.v1_12_R1.util.Waitable;
+import org.bukkit.event.player.AsyncPlayerPreLoginEvent;
+import org.bukkit.event.player.PlayerPreLoginEvent;
 
 public class NetHandlerLoginServer implements INetHandlerLoginServer, ITickable
 {
@@ -49,6 +54,8 @@
     private SecretKey field_147335_k;
     private EntityPlayerMP field_181025_l;
 
+    public String hostname = "";
+
     public NetHandlerLoginServer(MinecraftServer p_i45298_1_, NetworkManager p_i45298_2_)
     {
         this.field_147327_f = p_i45298_1_;
@@ -56,7 +63,6 @@
         field_147329_d.nextBytes(this.field_147330_e);
     }
 
-    @Override
     public void func_73660_a()
     {
         if (this.field_147328_g == NetHandlerLoginServer.LoginState.READY_TO_ACCEPT)
@@ -70,16 +76,29 @@
             if (entityplayermp == null)
             {
                 this.field_147328_g = NetHandlerLoginServer.LoginState.READY_TO_ACCEPT;
-                this.field_147327_f.func_184103_al().func_72355_a(this.field_147333_a, this.field_181025_l);
+                net.minecraftforge.fml.common.network.internal.FMLNetworkHandler.fmlServerHandshake(this.field_147327_f.func_184103_al(), this.field_147333_a, this.field_181025_l);
                 this.field_181025_l = null;
             }
         }
 
         if (this.field_147336_h++ == 600)
         {
-            this.func_194026_b(new TextComponentTranslation("multiplayer.disconnect.slow_login"));
-        }
-    }
+            this.func_194026_b(new TextComponentTranslation("multiplayer.disconnect.slow_login", new Object[0]));
+        }
+    }
+
+    // CraftBukkit start
+    @Deprecated
+    public void disconnect(String s) {
+        try {
+            ITextComponent ichatbasecomponent = new TextComponentTranslation(s);
+            this.field_147333_a.func_179290_a(new SPacketDisconnect(ichatbasecomponent));
+            this.field_147333_a.func_150718_a(ichatbasecomponent);
+        } catch (Exception exception) {
+            NetHandlerLoginServer.field_147332_c.error("Error whilst disconnecting player", exception);
+        }
+    }
+    // CraftBukkit end
 
     public void func_194026_b(ITextComponent p_194026_1_)
     {
@@ -95,18 +114,48 @@
         }
     }
 
+    // Spigot start
+    public void initUUID()
+    {
+        UUID uuid;
+        if ( field_147333_a.spoofedUUID != null )
+        {
+            uuid = field_147333_a.spoofedUUID;
+        } else
+        {
+            uuid = UUID.nameUUIDFromBytes( ( "OfflinePlayer:" + this.field_147337_i.getName() ).getBytes( StandardCharsets.UTF_8 ) );
+        }
+
+        this.field_147337_i = new GameProfile( uuid, this.field_147337_i.getName() );
+
+        if (field_147333_a.spoofedProfile != null)
+        {
+            for ( com.mojang.authlib.properties.Property property : field_147333_a.spoofedProfile )
+            {
+                this.field_147337_i.getProperties().put( property.getName(), property );
+            }
+        }
+    }
+    // Spigot end
+
     public void func_147326_c()
     {
-        if (!this.field_147337_i.isComplete())
+        // Spigot start - Moved to initUUID
+        /*
+        if (!this.loginGameProfile.isComplete())
         {
-            this.field_147337_i = this.func_152506_a(this.field_147337_i);
+            this.loginGameProfile = this.getOfflineProfile(this.loginGameProfile);
         }
-
-        String s = this.field_147327_f.func_184103_al().func_148542_a(this.field_147333_a.func_74430_c(), this.field_147337_i);
-
-        if (s != null)
+        */
+        // Spigot end
+
+        // String s = this.server.getPlayerList().allowUserToConnect(this.networkManager.getRemoteAddress(), this.loginGameProfile);
+        // CraftBukkit start - fire PlayerLoginEvent
+        EntityPlayerMP s = this.field_147327_f.func_184103_al().allowUserToConnect(this, this.field_147337_i, hostname);
+
+        if (s == null)
         {
-            this.func_194026_b(new TextComponentTranslation(s));
+            // this.disconnect(new TextComponentTranslation(s, new Object[0]));
         }
         else
         {
@@ -133,12 +182,11 @@
             }
             else
             {
-                this.field_147327_f.func_184103_al().func_72355_a(this.field_147333_a, this.field_147327_f.func_184103_al().func_148545_a(this.field_147337_i));
+                net.minecraftforge.fml.common.network.internal.FMLNetworkHandler.fmlServerHandshake(this.field_147327_f.func_184103_al(), this.field_147333_a, this.field_147327_f.func_184103_al().createPlayerForUser(this.field_147337_i, s));
             }
         }
     }
 
-    @Override
     public void func_147231_a(ITextComponent p_147231_1_)
     {
         field_147332_c.info("{} lost connection: {}", this.func_147317_d(), p_147231_1_.func_150260_c());
@@ -146,12 +194,9 @@
 
     public String func_147317_d()
     {
-        return this.field_147337_i != null
-               ? this.field_147337_i + " (" + this.field_147333_a.func_74430_c() + ")"
-               : String.valueOf(this.field_147333_a.func_74430_c());
+        return this.field_147337_i != null ? this.field_147337_i + " (" + this.field_147333_a.func_74430_c() + ")" : String.valueOf((Object)this.field_147333_a.func_74430_c());
     }
 
-    @Override
     public void func_147316_a(CPacketLoginStart p_147316_1_)
     {
         Validate.validState(this.field_147328_g == NetHandlerLoginServer.LoginState.HELLO, "Unexpected hello packet");
@@ -164,11 +209,23 @@
         }
         else
         {
-            this.field_147328_g = NetHandlerLoginServer.LoginState.READY_TO_ACCEPT;
+            // Spigot start
+            new Thread(net.minecraftforge.fml.common.thread.SidedThreadGroups.SERVER, "User Authenticator #" + NetHandlerLoginServer.field_147331_b.incrementAndGet()) {
+                @Override
+                public void run() {
+                    try {
+                        initUUID();
+                        new LoginHandler().fireEvents();
+                    } catch (Exception ex) {
+                        disconnect("Failed to verify username!");
+                        field_147327_f.server.getLogger().log(java.util.logging.Level.WARNING, "Exception verifying " + field_147337_i.getName(), ex);
+                    }
+                }
+            }.start();
+            // Spigot end
         }
     }
 
-    @Override
     public void func_147315_a(CPacketEncryptionResponse p_147315_1_)
     {
         Validate.validState(this.field_147328_g == NetHandlerLoginServer.LoginState.KEY, "Unexpected key packet");
@@ -183,32 +240,25 @@
             this.field_147335_k = p_147315_1_.func_149300_a(privatekey);
             this.field_147328_g = NetHandlerLoginServer.LoginState.AUTHENTICATING;
             this.field_147333_a.func_150727_a(this.field_147335_k);
-            (new Thread("User Authenticator #" + field_147331_b.incrementAndGet())
+            (new Thread(net.minecraftforge.fml.common.thread.SidedThreadGroups.SERVER, "User Authenticator #" + field_147331_b.incrementAndGet())
             {
-                @Override
                 public void run()
                 {
                     GameProfile gameprofile = NetHandlerLoginServer.this.field_147337_i;
 
                     try
                     {
-                        String s = new BigInteger(
-                            CryptManager.func_75895_a(
-                                "", NetHandlerLoginServer.this.field_147327_f.func_71250_E().getPublic(), NetHandlerLoginServer.this.field_147335_k
-                            )
-                        )
-                        .toString(16);
-                        NetHandlerLoginServer.this.field_147337_i = NetHandlerLoginServer.this.field_147327_f
-                                .func_147130_as()
-                                .hasJoinedServer(new GameProfile(null, gameprofile.getName()), s, this.func_191235_a());
+                        String s = (new BigInteger(CryptManager.func_75895_a("", NetHandlerLoginServer.this.field_147327_f.func_71250_E().getPublic(), NetHandlerLoginServer.this.field_147335_k))).toString(16);
+                        NetHandlerLoginServer.this.field_147337_i = NetHandlerLoginServer.this.field_147327_f.func_147130_as().hasJoinedServer(new GameProfile((UUID)null, gameprofile.getName()), s, this.getAddress());
 
                         if (NetHandlerLoginServer.this.field_147337_i != null)
                         {
-                            NetHandlerLoginServer.field_147332_c
-                            .info(
-                                "UUID of player {} is {}", NetHandlerLoginServer.this.field_147337_i.getName(), NetHandlerLoginServer.this.field_147337_i.getId()
-                            );
-                            NetHandlerLoginServer.this.field_147328_g = NetHandlerLoginServer.LoginState.READY_TO_ACCEPT;
+                            // CraftBukkit start - fire PlayerPreLoginEvent
+                            if (!field_147333_a.func_150724_d()) {
+                                return;
+                            }
+
+                            new LoginHandler().fireEvents();
                         }
                         else if (NetHandlerLoginServer.this.field_147327_f.func_71264_H())
                         {
@@ -218,11 +268,11 @@
                         }
                         else
                         {
-                            NetHandlerLoginServer.this.func_194026_b(new TextComponentTranslation("multiplayer.disconnect.unverified_username"));
-                            NetHandlerLoginServer.field_147332_c.error("Username '{}' tried to join with an invalid session", gameprofile.getName());
+                            NetHandlerLoginServer.this.func_194026_b(new TextComponentTranslation("multiplayer.disconnect.unverified_username", new Object[0]));
+                            NetHandlerLoginServer.field_147332_c.error("Username '{}' tried to join with an invalid session", (Object)gameprofile.getName());
                         }
                     }
-                    catch (AuthenticationUnavailableException authenticationunavailableexception)
+                    catch (AuthenticationUnavailableException var3)
                     {
                         if (NetHandlerLoginServer.this.field_147327_f.func_71264_H())
                         {
@@ -232,23 +282,67 @@
                         }
                         else
                         {
-                            NetHandlerLoginServer.this.func_194026_b(new TextComponentTranslation("multiplayer.disconnect.authservers_down"));
+                            NetHandlerLoginServer.this.func_194026_b(new TextComponentTranslation("multiplayer.disconnect.authservers_down", new Object[0]));
                             NetHandlerLoginServer.field_147332_c.error("Couldn't verify username because servers are unavailable");
+
                         }
+                        // CraftBukkit start - catch all exceptions
+                    } catch (Exception exception) {
+                        disconnect("Failed to verify username!");
+                        field_147327_f.server.getLogger().log(java.util.logging.Level.WARNING, "Exception verifying " + gameprofile.getName(), exception);
+                        // CraftBukkit end
                     }
                 }
                 @Nullable
-                private InetAddress func_191235_a()
+                private InetAddress getAddress()
                 {
                     SocketAddress socketaddress = NetHandlerLoginServer.this.field_147333_a.func_74430_c();
-                    return NetHandlerLoginServer.this.field_147327_f.func_190518_ac() && socketaddress instanceof InetSocketAddress
-                           ? ((InetSocketAddress)socketaddress).getAddress()
-                           : null;
-                }
-            })
-            .start();
-        }
-    }
+                    return NetHandlerLoginServer.this.field_147327_f.func_190518_ac() && socketaddress instanceof InetSocketAddress ? ((InetSocketAddress)socketaddress).getAddress() : null;
+                }
+            }).start();
+        }
+    }
+
+    // Spigot start
+    public class LoginHandler {
+        public void fireEvents() throws Exception {
+            String playerName = field_147337_i.getName();
+            java.net.InetAddress address = ((java.net.InetSocketAddress) field_147333_a.func_74430_c()).getAddress();
+            java.util.UUID uniqueId = field_147337_i.getId();
+            final org.bukkit.craftbukkit.v1_12_R1.CraftServer server = NetHandlerLoginServer.this.field_147327_f.server;
+
+            AsyncPlayerPreLoginEvent asyncEvent = new AsyncPlayerPreLoginEvent(playerName, address, uniqueId);
+            server.getPluginManager().callEvent(asyncEvent);
+
+            if (PlayerPreLoginEvent.getHandlerList().getRegisteredListeners().length != 0) {
+                final PlayerPreLoginEvent event = new PlayerPreLoginEvent(playerName, address, uniqueId);
+                if (asyncEvent.getResult() != PlayerPreLoginEvent.Result.ALLOWED) {
+                    event.disallow(asyncEvent.getResult(), asyncEvent.getKickMessage());
+                }
+                Waitable<PlayerPreLoginEvent.Result> waitable = new Waitable<PlayerPreLoginEvent.Result>() {
+                    @Override
+                    protected PlayerPreLoginEvent.Result evaluate() {
+                        server.getPluginManager().callEvent(event);
+                        return event.getResult();
+                    }};
+
+                    NetHandlerLoginServer.this.field_147327_f.processQueue.add(waitable);
+                    if (waitable.get() != PlayerPreLoginEvent.Result.ALLOWED) {
+                        disconnect(event.getKickMessage());
+                        return;
+                    }
+            } else {
+                if (asyncEvent.getLoginResult() != AsyncPlayerPreLoginEvent.Result.ALLOWED) {
+                    disconnect(asyncEvent.getKickMessage());
+                    return;
+                }
+            }
+            // CraftBukkit end
+            NetHandlerLoginServer.field_147332_c.info("UUID of player {} is {}", NetHandlerLoginServer.this.field_147337_i.getName(), NetHandlerLoginServer.this.field_147337_i.getId());
+            NetHandlerLoginServer.this.field_147328_g = NetHandlerLoginServer.LoginState.READY_TO_ACCEPT;
+        }
+    }
+    // Spigot end
 
     protected GameProfile func_152506_a(GameProfile p_152506_1_)
     {
